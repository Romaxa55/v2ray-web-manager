on:
  push:
    branches:
      - master
  workflow_dispatch:
  

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Release
        uses: mg-smartrent/github-actions-maven-release@v1.5
        with:
          release-branch-name: "master"
          git-release-bot-name: "ReleaseBot"
          git-release-bot-email: "release.bot@smartrent.com"
          access-token: ${GITHUB_TOKEN}

          # Release
          maven-repo-server-id: ${MAVEN_SERVER_ID}
          maven-repo-server-username: ${GITHUB_USERNAME}
          maven-repo-server-password: ${GITHUB_TOKEN}
          maven-release-args: "-Dskip.unit.tests=true -Dskip.integration.tests=true"

          # Publish artifacts to GitHub Packages
          maven-publish-args: "-Dskip.unit.tests=true -Dskip.integration.tests=true"
          maven-release-publish: "true"
          maven-snapshot-publish: "true"

          #Build and push Docker Image to docker registry
#          maven-release-push-docker: "true"
#          maven-snapshot-push-docker: "true"
#          maven-docker-args: ""
#          maven-docker-user: ${DOCKER_USERNAME}
#          maven-docker-password: ${DOCKER_PASSWORD}
#          maven-docker-file-repository: ${DOCKER_FILE_REPOSITORY}
